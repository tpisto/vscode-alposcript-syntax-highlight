<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>AlpoScript Syntax: version 1</string>
	<key>fileTypes</key>
	<array>
		<string>as</string>
		<string>asx</string>
	</array>
	<key>firstLineMatch</key>
	<string>^#!.*\bls</string>
	<key>foldingStartMarker</key>
	<string>^\s*class\s+\S.*$|.*(-&gt;|=&gt;)\s*$|.*[\[{]\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*[}\]]\s*$</string>
	<key>keyEquivalent</key>
	<string>^~C</string>
	<key>name</key>
	<string>AlpoScript</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(?x)
				!?[~-]{1,2}&gt;\*?
				|&lt;[~-]{1,2}!?
				|\(\s* (?=    instanceof[\s)]|and[\s)]|or[\s)]|is[\s)]|isnt[\s)]|in[\s)]|import[\s)]|import\ all[\s)]     |\.|[-+/*%^&amp;&lt;&gt;=|][\b\s)\w$]|\*\*|\%\%)
				|      (?&lt;=[\s(]instanceof|[\s(]and|[\s(]or|[\s(]is|[\s(]isnt|[\s(]in|[\s(]import|[\s(]import\ all|[\s(]do|\.|\*\*|\%\%|[\b\s(\w$][-+/*%^&amp;&lt;&gt;=|]) \s*\)
			</string>
			<key>name</key>
			<string>storage.type.function.alposcript</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.alposcript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*\/</string>
			<key>name</key>
			<string>comment.block.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>@\w*</string>
					<key>name</key>
					<string>storage.type.annotation.alposcriptscript</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#)(?!\{).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.alposcript</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((?:!|~|!~|~!)?function\*?)\s+([$\w\-]*[$\w]+)</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.instance.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(new)\s+(\w+(?:\.\w*)*)</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(package|private|protected|public|interface|enum|static)(?!-)\b</string>
			<key>name</key>
			<string>keyword.illegal.alposcript</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'''</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.alposcript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'''</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.alposcript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.heredoc.alposcript</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"""</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.alposcript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"""</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.alposcript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.heredoc.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.alposcript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_alposcript</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>``</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.alposcript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>``</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.alposcript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.script.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.alposcript</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;\[</string>
			<key>end</key>
			<string>\]&gt;</string>
			<key>name</key>
			<string>string.array-literal.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>/{2}(?![\s=/*+{}?]).*?[^\\]/[igmy]{0,4}(?![a-zA-Z0-9])/{2}</string>
			<key>name</key>
			<string>string.regexp.alposcript</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/{2}\n</string>
			<key>end</key>
			<string>/{2}[imgy]{0,4}</string>
			<key>name</key>
			<string>string.regexp.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#embedded_spaced_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_alposcript</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/{2}</string>
			<key>end</key>
			<string>/{2}[imgy]{0,4}</string>
			<key>name</key>
			<string>string.regexp.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.alposcript</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolated_alposcript</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>/(?![\s=/*+{}?]).*?[^\\]/[igmy]{0,4}(?![a-zA-Z0-9])</string>
			<key>name</key>
			<string>string.regexp.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(?&lt;![\.\$\-@])(
					instanceof|new|delete|typeof|and|or|is|isnt|not
				)(?!\-|\s*:)\b
			</string>
			<key>name</key>
			<string>keyword.operator.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;\||\|&gt;</string>
			<key>name</key>
			<string>keyword.operator.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>=&gt;</string>
			<key>name</key>
			<string>keyword.control.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(?&lt;![\.\$\-@])(?:
				return|break|continue|throw
				|try|if|while|for|for\s+own|switch|unless|until
				|catch|finally|else|nobreak|case|default|fallthrough|when|otherwise|then
				|yield
				)(?!\-|\s*:)\b
			</string>
			<key>name</key>
			<string>keyword.control.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				and=|or=|%|&amp;|\^|\*|\/|(?&lt;![a-zA-Z$_])(\-)?\-(?!\-?&gt;)|\+\+|\+|
				~(?!~?&gt;)|==|=|!=|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|
				&gt;&gt;&gt;=|&lt;&gt;|&lt;(?!\[)|(?&lt;!\])&gt;|(?&lt;!\w)!(?!([~\-]+)?&gt;)|&amp;&amp;|\.\.(\.)?|\s\.\s|\?|\|\||\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|\.=|&amp;=
				|\^=
			</string>
			<key>name</key>
			<string>keyword.operator.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(?&lt;![\.\$\-@])(?:
				function
				)(?!\-|\s*:)\b
			</string>
			<key>name</key>
			<string>storage.type.function.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)
				\b(?&lt;![\.\$\-@])(?:
				this|throw|then|try|typeof!?|til|to
				|continue|const|case|catch|class
				|in|instanceof|import|import\s+all|implements|if|is
				|default|delete|debugger|do
				|for|for\s+own|finally|function|from|fallthrough
				|super|switch
				|else|nobreak|extends|export|eval
				|and|arguments
				|new|not
				|unless|until
				|while|with|when
				|of|or|otherwise
				|let|var|loop
				|match
				|by|yield
				)(?!\-|\s*:)\b
			</string>
			<key>name</key>
			<string>keyword.other.alposcript</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.assignment.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value, keyword.operator.alposcript</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-zA-Z\$_](?:[\w$.-])*)\s*(?!\::)((:)|(=(?!&gt;)))\s*(?!(\s*!?\s*\(.*\))?\s*(!?[~-]{1,2}&gt;\*?))</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\s|^)([\[\{])(?=.*?[\]\}]\s+[:=])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>end</key>
			<string>([\]\}]\s*[:=])</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.variable.assignment.destructured.alposcript</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable_name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instance_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#single_quoted_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#double_quoted_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numeric</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.alposcript</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.alposcript</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
				(\s*)
				(?=[a-zA-Z\$_])
				([a-zA-Z\$_]([\w$.:-])*)\s*
				(?=[:=](\s*!?\s*\(.*\))?\s*(!?[~-]{1,2}&gt;\*?))
			</string>
			<key>name</key>
			<string>meta.function.alposcript</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.alposcript</string>
				</dict>				
			</dict>		
			<key>match</key>
			<string>(?x)([\w$.:-]+)(\s*!?\s*\(.*\))?\s*(!?[-=]&gt;{1,2}\*?)</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;!\.)(true|on|yes)(?!\s*:)\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;!\.)(false|off|no)(?!\s*:)\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;!\.)(null|void)(?!\s*:)\b</string>
			<key>name</key>
			<string>constant.language.null.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;!\.)(super|this|extends)(?!\s*:)\b</string>
			<key>name</key>
			<string>variable.language.alposcript</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control.inheritance.alposcript</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(class\b)\s+(@?[a-zA-Z$_][\w$.-]*)?(?:\s+(extends)\s+(@?[a-zA-Z$_][\w$.-]*))?</string>
			<key>name</key>
			<string>meta.class.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(debugger|\\)\b</string>
			<key>name</key>
			<string>keyword.other.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				Array|ArrayBuffer|Blob|Boolean|Date|document|event|Function|
				Int(8|16|32|64)Array|Math|Map|Number|
				Object|Proxy|RegExp|Set|String|WeakMap|
				window|Uint(8|16|32|64)Array|XMLHttpRequest
			)\b</string>
			<key>name</key>
			<string>support.class.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(console)\b</string>
			<key>name</key>
			<string>entity.name.type.object.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Infinity|NaN|undefined)\b</string>
			<key>name</key>
			<string>constant.language.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>meta.delimiter.method.period.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]\s*</string>
			<key>name</key>
			<string>meta.brace.square.alposcript</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#instance_variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#backslash_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#single_quoted_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#double_quoted_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numeric</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>()(@|@@|[$\w\-]*[$\w]+)\s*(`)</string>
		</dict>
		<dict>
			<key>name</key>
			<string>keyword.operator.alposcript</string>
			<key>match</key>
			<string>`</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.alposcript</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>()(@|@@|[$\w\-]*[$\w]+)(?:(\??\!)|[(])</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function-call.alposcript</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.alposcript</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@|@@|[$\w\-]*[$\w]+)(\?)? (?!\s*(((by|of|and|or|with|when|unless|if|is|isnt|else|nobreak|for|from|not in|in|catch|til|to|then|import|extends|implements|instanceof)\b)|[=:.*\/+\-%\^&lt;&gt;][ =)]|[`}%*)]|/(?!.*?/)|&amp;&amp;|[.][^.]|=>|\/ +|\||\|\||\-\-|\+\+|\|&gt;|&lt;|\||$|\n|\#|/\*))</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\| _</string>
			<key>name</key>
			<string>keyword.control.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\|(?![.])</string>
			<key>name</key>
			<string>keyword.control.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\|</string>
			<key>name</key>
			<string>keyword.operator.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>((?&lt;=console\.)(debug|warn|info|log|error|time(End|-end)|assert))\b</string>
			<key>name</key>
			<string>support.function.console.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				decodeURI(Component)?|encodeURI(Component)?|eval|parse(Float|Int)|require
			)\b</string>
			<key>name</key>
			<string>support.function.alposcript</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Generated by DOM query from http://gkz.github.com/prelude-ls/:
			[].slice
			.call(document.querySelectorAll(".nav-pills li a"))
			.map(function(_) {return _.innerText})
			.filter(function(_) {return _.trim() !== '})
			.slice(2)
			.join("|")
			</string>
			<key>match</key>
			<string>(?x)(?&lt;![.-])\b(
				map|filter|reject|partition|find|each|head|tail|last|initial|empty|
				values|keys|length|cons|append|join|reverse|fold(l|r)?1?|unfoldr|
				and(List|-list)|or(List|-list)|any|all|unique|sum|product|mean|compact|
				concat(Map|-map)?|maximum|minimum|scan(l|r)?1?|replicate|slice|apply|
				split(At|-at)?|take(While|-while)?|drop(While|-while)?|span|first|
				break(It|-it)|list(ToObj|-to-obj)|obj(ToFunc|-to-func)|
				pairs(ToObj|-to-obj)|obj(ToPairs|-to-pairs|ToLists|-to-lists)|
				zip(All|-all)?(With|-with)?|compose|curry|partial|flip|fix|
				sort(With|-with|By|-by)?|group(By|-by)|break(List|-list|Str|-str)|
				difference|intersection|union|average|flatten|chars|unchars|repeat|
				lines|unlines|words|unwords|max|min|negate|abs|signum|quot|rem|div|mod|
				recip|pi|tau|exp|sqrt|ln|pow|sin|cos|tan|asin|acos|atan|atan2|truncate|
				round|ceiling|floor|is(It|-it)NaN|even|odd|gcd|lcm|disabled__id
			)\b(?![.-])</string>
			<key>name</key>
			<string>support.function.prelude.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)(?&lt;![.-])\b(that|it|e|_)\b</string>
			<key>name</key>
			<string>support.function.semireserved.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=(\.|\]|\)))(
				apply|call|concat|every|filter|for(Each|-each)|
				from|has(Own|-own)(Property|-property)|index(Of|-of)|
				is(Prototype|-prototype)(Of|-of)|join|last(Index|-index)(Of|-of)|
				map|of|pop|property(Is|-is)(Enumerable|-enumerable)|push|
				reduce(Right|-right)?|reverse|shift|slice|some|sort|
				splice|to(Locale|-locale)?(String|-string)|unshift|valueOf
			))\b(?!-) </string>
			<key>name</key>
			<string>support.function.method.array.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=Array\.)(
				isArray
			))\b</string>
			<key>name</key>
			<string>support.function.static.array.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=Object\.)(
				create|define(Propert|-propert)(ies|y)|freeze|
				get(Own|-own)(Property|-property)(Descriptors?|Names)|
				get(Property|-property)(Descriptor|Names)|getPrototypeOf|
				is((Extensible|-extensible)|(Frozen|-frozen)|(Sealed|-sealed))?|
				keys|prevent(Extensions|-extensions)|seal
			))\b</string>
			<key>name</key>
			<string>support.function.static.object.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=Math\.)(
				abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|
				hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|
				tan|tanh|trunc
			))\b</string>
			<key>name</key>
			<string>support.function.static.math.alposcript</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?x)((?&lt;=Number\.)(
				is(Finite|Integer|NaN)|to(Integer|-integer)
			))\b</string>
			<key>name</key>
			<string>support.function.static.number.alposcript</string>
		</dict>
		<!-- Every other word is a variable -->
		<dict>
			<key>match</key>
			<string>[\$\w][\w-]*</string>
			<key>name</key>
			<string>variable.other.alposcript</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>backslash_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\\([\\)\s,\};\]])?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.quoted.single.alposcript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([\\)\s,\};\]])</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.alposcript</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.single.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>double_quoted_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.alposcript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.alposcript</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.alposcript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.alposcript</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#interpolated_alposcript</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>embedded_comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.alposcript</string>
						</dict>
					</dict>
					<key>match</key>

					<string>(?&lt;!\\)(#).*$\n</string>
					<key>name</key>
					<string>comment.line.number-sign.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>embedded_spaced_comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.alposcript</string>
						</dict>
					</dict>
					<key>match</key>

					<string>(?&lt;!\\)(#\s).*$\n</string>
					<key>name</key>
					<string>comment.line.number-sign.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>constructor_variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([a-zA-Z$_][\w$-]*)(@{2})([a-zA-Z$_][\w$-]*)?</string>
					<key>name</key>
					<string>variable.other.readwrite.constructor.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>instance_variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![$\w\-])(@)</string>
					<key>name</key>
					<string>variable.other.readwrite.instance.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>interpolated_alposcript</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\#\{</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.alposcript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>source.alposcript.embedded.source</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\#</string>
					<key>match</key>
					<string>#([a-zA-Z$_-]+|@)</string>
					<key>end</key>
					<string></string>
					<key>name</key>
					<string>source.alposcript.embedded.source.simple</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>numeric</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;![\$@a-zA-Z_])(([0-9]+r[0-9_]+)|((16r|0[xX])[0-9a-fA-F_]+)|([0-9]+(\.[0-9]+[0-9_]*)?(e[+\-]?[0-9_]+)?)[_a-zA-Z0-9]*)</string>
					<key>name</key>
					<string>constant.numeric.alposcript</string>
				</dict>
			</array>
		</dict>
		<key>single_quoted_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.alposcript</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.alposcript</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.alposcript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
							<key>name</key>
							<string>constant.character.escape.alposcript</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>variable_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.assignment.alposcript</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([a-zA-Z\$_][\w$-]*(\.\w+)*)(?!\-)</string>
					<key>name</key>
					<string>variable.assignment.alposcript</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.alposcript</string>
	<key>uuid</key>
	<string>2D4A1111-BBA9-4FB3-B27C-57D50F40C27E</string>
</dict>
</plist>
